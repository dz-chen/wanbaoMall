<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
	<display-name>wanbao-manage</display-name>
	
	<!-- spring 配置 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<!-- 指明spring配置文件的路径,包括了事务配置文件 -->
		<param-value>classpath:spring/applicationContext*.xml</param-value>
	</context-param>
	
	<!--Spring的ApplicationContext 载入 -->
	<!-- spring容器的监听器 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<!-- 编码过滤器，以UTF8编码， 仅解决POST -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 解决PUT请求无法提交表单数据的问题
	    => 仅适用于PUT,不适用于DELETE
	-->
	<filter>
		<filter-name>HttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HttpPutFormContentFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>HttpMethodFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 
		将POST请求转化为DELETE或者是PUT
		前端ajax要用_method指定真正的请求参数
		=> 这个方法对于PUT、DELETE通用
	 -->
	<filter>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>


	<!-- 配置SpringMVC框架入口 -->
	<servlet>
        <servlet-name>wanbao-manage</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
        	<param-name>contextConfigLocation</param-name>
        	<param-value>classpath:spring/wanbao-manage-servlet.xml</param-value>
        </init-param>
         <load-on-startup>1</load-on-startup>  <!-- 容器启动时初始化servlet -->
    </servlet>

    <servlet-mapping>
        <servlet-name>wanbao-manage</servlet-name>
        <url-pattern>/rest/*</url-pattern>  <!-- 匹配客户端发出的请求 -->
    </servlet-mapping>
    
    <welcome-file-list>
    	<welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

</web-app>